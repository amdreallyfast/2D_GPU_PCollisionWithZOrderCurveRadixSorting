// REQUIRES Random.comp

// look up these uniforms in both emitter reset shaders
// Note: These uniforms are special for particle resetting and not to anyone else, so even 
// though they are used in multiple shaders (reset via point emitters, reset via bar emitters), 
// don't define the uniform locations in CrossShaderUniformLocations.comp.  Since they aren't 
// defined there, do a uniform location lookup to avoid location conflicts with the predefined 
// locations specified in that shader.
uniform float uMinParticleVelocity;
uniform float uDeltaParticleVelocity;


/*------------------------------------------------------------------------------------------------
Description:
    Similar to the MinMaxVelocity::GetNew() on the CPU side, this function calculates a random 
    velocity between a min and max value.  The min value is provided by a uniform, but the max 
    is instead inferred by the "delta particle velocity" uniform since all that is needed for 
    the calculation is a variance on the delta.

    Used for both point and bar emitters.
Parameters:    
    randSeed    Self-explanatory
Returns:
    A semi-random float on the range uMinParticleVelocity + (rand0To1 * uDeltaParticleVelocity).
Creator:    John Cox (10-10-2016)
------------------------------------------------------------------------------------------------*/
float NewVelocityBetweenMinAndMax(vec2 randSeed)
{
    float velocityVariation = RandomOnRange0To1() * uDeltaParticleVelocity;
    float velocityMagnitude = uMinParticleVelocity + velocityVariation;

    return velocityMagnitude;
}
